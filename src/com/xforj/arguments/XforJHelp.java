package com.xforj.arguments;

public class XforJHelp {
   public static String getHelpMenu(){
return "TITLE\n   XforJ A Javascript Template Compiler \n\nCOPYRIGHT\n   Â© 2012 Joseph Spencer \n\nLICENSE\n\n   http://www.apache.org/licenses/LICENSE-2.0 \n\nDESCRIPTION\n   XforJ combines the elegance of \n   javascript and the power of XSL \n   elements to produce compiled javascript \n   templates. You compose templates in a \n   hybird grammar and compile that down to \n   javascript. \n\n   Visit http://www.xforj.com for more \n   info. \n\nEXAMPLE\n   java -jar XforJ.x.x.x.jar --input-file \n   /my/template/file.html \n   --output-directory \n   /my/template/output.js \n\nARGUMENTS\n   OPTIONAL\n      --input-file\n         A pre-compiled XforJ template file. \n\n         When --output-file is specified, this \n         will be the target of your input file. \n\n         When using ant, supplying destdir \n         without outputfile as attributes will \n         create a target file in the destination \n         directory of the same name as the input \n         file. \n\n      --output-file\n         The file where the compiled template \n         will be placed. \n\n         This is ignored if --input-file isn't \n         specified. \n\n      destdir\n         [ANT PROPERTY]\n         The output directory for files given by \n         --input-file, or inputfiles(ant). \n         Directory structure is copied from \n         inputfiles. \n\n      srcdir\n         [ANT PROPERTY]\n         The source directory for files found \n         using inputfiles(ant). This argument is \n         required when using nested filesets, in \n         order to preserve directory structure. \n\n      inputfiles\n         [NESTED ANT TASK]\n         The input files to compile. \n\n         When using this option, you must \n         provide both the destdir and srcdir \n         attributes, or this task has no effect. \n\n         Only FileSet elements are allowed. \n\n      --overwrite\n         Whether or not files should be \n         over-written. If not specified, any \n         attempt to overwrite an existing file \n         will be rejected, and a message \n         displayed to the output. \n\n      --minify-html\n         When enabled, space is removed before \n         and after all '<>'. \n\n      --global\n         When enabled, all templates are \n         assigned to the global object. When \n         disabled, a new object is returned from \n         the entire XforJ program. In this \n         scenario, a mechanism such as eval must \n         be used to capture the returned object \n         to gain access to the defined \n         templates. \n\n      --normalize-space\n         Replace all white space with a single \n         space ' '. \n\n      --debug\n         Turns on debugging. \n\n      --warn\n         Turns on run time warnings. \n\n      --remove-logs\n         Removes any log elements from \n         compilation. \n\n      --use-external\n         When enabled, the internal functions \n         used by xforj output will not be \n         included. It is then necessary to load \n         a seperate js library. The library can \n         be generated from the terminal by \n         specifying: --create-library true. \n\n      --output-library\n         Use this option to create the external \n         XforJ library that is needed when \n         specifying --use-external true. \n\n         When this is enabled, XforJ will not \n         perform any compiling. \n\n      --escape-xss\n         When enabled, the following characters \n         are escaped when using print \n         statements: \n\n         *)& (not followed by: \n         '[a-zA-Z]+;|#[0-9]+;') \n\n         *)' \n\n         *)\" \n\n         *)` \n\n         *)< \n\n         *)> \n\n          \n\n";   }
}
